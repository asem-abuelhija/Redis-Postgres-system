---
- name: Prepare a VM for the project
  hosts: localhost
  gather_facts: no
  tasks:
  pre_tasks:
    - name: make sure python prerequisites are installed locally
      apt:
        name:
          - libpq-dev
          - python-dev
          - python3-dev
          - python3-pip
          
    - name: Install and configure Vagrant and Virtualbox.
      block:
        - name: Install Virtualbox
          apt:
            name: virtualbox
            state: present
            force_apt_get: yes
            update_cache: yes
          tags:
            virtualbox
        - name: Install Vagrant package.
          apt:
            deb: https://releases.hashicorp.com/vagrant/2.2.19/vagrant_2.2.19_x86_64.deb
            state: present
            force_apt_get: yes
            update_cache: no
          tags:
            vagrant
        - name: Create Vagrant file
          local_action:
              module: blockinfile
              path: ./Vagrantfile
              create: true
              block: |
                Vagrant.configure("2") do |config|
                  config.vm.box = "ubuntu/xenial32"
                  config.vm.hostname = "jawaker-system"
                  config.vm.provision "ansible", playbook: "ping.yml"
                  config.vm.boot_timeout = 900
                  config.vm.network "private_network", ip: "192.168.56.100"
                  config.vm.define "jawaker-system"
                  config.vm.provider "virtualbox" do |vb|
                    vb.memory = "1024"
                    vb.name = "jawaker-system"
                  end
                end
          tags:
            vagrant_file
        - name: start the machine
          command: chdir="{{ playbook_dir }}" vagrant up
          register: machine_is_up
          changed_when: machine_is_up.stdout.find('Machine already provisioned.') == -1
          tags:
            start_machine
      rescue:
        - name: Print when there are errors
          debug:
            msg: 'Error occurred! Unable to finish executing this playbook.'
